

   // bytes to decode compressed FEN string 
static const BYTE CH_FEN_decode [721] = {  14, 23,  0,   19, 50,  0,   51, 29,  0,   52, 16,  0,   15, 53,  0,   41, 13,  0,   2, 53,  0,   51, 30,  0,   50, 16,  0, 
     27, 53,  0,   27, 52,  0,   6, 1,  0,   53, 78,  0,   51, 77,  0,   6, 5,  0,   2, 55,  0,   13, 11,  0,   53, 69,  0,   37, 8,  0,   54, 11,  0,   55, 106,  0,   51, 4,  0,   36, 50,  0,   54, 42,  0,   40, 21,  0,   3, 1,  0,   52, 79,  0,   51, 16,  0,   50, 95,  0, 
     4, 143,  0,   51, 2,  0,   4, 21,  0,   9, 39,  0,   52, 2,  0,   54, 1,  0,   36, 1,  0,   14, 34,  0,   126, 54,  0,   31, 1,  0,   52, 66,  0,   49, 107,  0,   49, 15,  0,   14, 27,  0,   54, 46,  0,   53, 65,  0,   50, 29,  0,   4, 8,  0,   50, 89,  0,   3, 53,  0, 
     31, 51,  0,   14, 11,  0,   5, 53,  0,   18, 49,  0,   33, 51,  0,   54, 70,  0,   28, 53,  0,   6, 8,  0,   55, 5,  0,   28, 52,  0,   15, 52,  0,   51, 91,  0,   51, 87,  0,   49, 12,  0,   53, 67,  0,   54, 40,  0,   28, 1,  0,   99, 53,  0,   49, 108,  0,   11, 53,  0, 
     114, 54,  0,   49, 100,  0,   97, 53,  0,   50, 13,  0,   27, 51,  0,   38, 50,  0,   14, 54,  0,   5, 52,  0,   31, 50,  0,   49, 13,  0,   14, 53,  0,   28, 51,  0,   52, 86,  0,   3, 55,  0,   54, 21,  0,   33, 50,  0,   54, 37,  0,   52, 11,  0,   54, 29,  0,   52, 73,  0, 
     12, 53,  0,   1, 53,  0,   51, 71,  0,   56, 50,  0,   6, 53,  0,   54, 30,  0,   52, 80,  0,   51, 85,  0,   53, 63,  0,   54, 34,  0,   15, 51,  0,   53, 44,  0,   27, 50,  0,   11, 55,  0,   4, 55,  0,   4, 7,  0,   53, 74,  0,   32, 142,  0,   119, 32,  0,   9, 7,  0, 
     12, 52,  0,   53, 43,  0,   5, 55,  0,   53, 1,  0,   13, 52,  0,   47, 51,  0,   11, 11,  0,   52, 58,  0,   117, 49,  0,   6, 55,  0,   1, 52,  0,   49, 3,  0,   57, 53,  0,   27, 54,  0,   49, 2,  0,   33, 53,  0,   36, 52,  0,   28, 54,  0,   28, 50,  0,   64, 52,  0, 
     52, 61,  0, 0,   53, 11,  0,   32, 17,  0,   31, 53,  0,   16, 55,  0,   49, 5,  0,   12, 51,  0,   16, 27,  0,   13, 51,  0,   11, 52,  0,   15, 50,  0,   6, 54,  0,   16, 54,  0,   6, 7,  0,   60, 53,  0,   1, 51,  0, 0,   56, 55,  0,   38, 52,  0, 
     4, 54,  0,   50, 2,  0, 0,   50, 3,  0,   14, 52,  0,   4, 53,  0,   16, 11,  0,   27, 49,  0,   1, 1,  0,   3, 52,  0,   56, 54,  0,   16, 53,  0,   13, 50,  0,   2, 52,  0,   5, 51,  0,   6, 52,  0,   56, 51,  0,   15, 49,  0,   12, 50,  0,   14, 51,  0, 
     6, 51,  0,   3, 51,  0,   3, 50,  0,   4, 52,  0,   56, 49,  0,   56, 53,  0,   5, 50,  0,   2, 51,  0,   56, 52,  0,   16, 52,  0,   5, 49,  0,   16, 50,  0,   14, 50,  0,   2, 50,  0,   4, 51,  0,   4, 50,  0,   51, 5,  0,   1, 50,  0,   12, 49,  0,   16, 51,  0, 
     50, 6,  0,   13, 49,  0,   11, 51,  0,   50, 5,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   52, 1,  0,   3, 49,  0, 0,   6, 50,  0,   11, 50,  0,   2, 49,  0,   14, 49,  0, 
     4, 49,  0,   56, 7,  0,   51, 11,  0,   6, 49,  0,   51, 1,  0,   56, 56,  0,   16, 49,  0,   50, 11,  0, 0,   50, 1,  0,   1, 49,  0,   11, 49,  0,   49, 1,  0,   49, 11,  0,   50, 1, 49,  0,   11, 50, 11,  0,   56, 56, 56,  0,   11, 11, 11,  0,   56, 56, 7,  0,   6, 49, 7,  0, 
     49, 1, 49,  0,   1, 1, 1,  0,   11, 49, 11,  0,   45, 32, 48, 32,  0, 0, 0, 0, 0, 0, 0,   56, 56, 56, 7,  0,   56, 56, 56, 56,  0,   32, 13, 32, 45, 32, 45, 32, 48, 32, 49,  0,   32, 119, 32, 45, 32, 45, 32, 48, 32, 49,  0, 0 };



   // Data for pgn-file loading 
   //   size 2 bytes, record count 2 bytes,
   //   filename for OPEN 1, 8, 0, "FILENAME,s,r" ...
   //   (file starts with loading address 0xA600)
   //   ...
      //  1545, 109, "M1P001,S,R"
      //  1548, 89, "M1P002,S,R"
      //  2400, 108, "M1P003,S,R"
static const BYTE files_m1p [47] = {  6, 9, 0, 109, 77, 49, 80, 48, 48, 49, 44, 83, 44, 82, 0, 
     6, 12, 0, 89, 77, 49, 80, 48, 48, 50, 44, 83, 44, 82, 0, 
     9, 96, 0, 108, 77, 49, 80, 48, 48, 51, 44, 83, 44, 82, 0, 
   0,0};

      //  1542, 90, "M2P001,S,R"
      //  1565, 75, "M2P002,S,R"
      //  1540, 57, "M2P003,S,R"
      //  1546, 60, "M2P004,S,R"
      //  1546, 56, "M2P005,S,R"
      //  1553, 61, "M2P006,S,R"
      //  1550, 60, "M2P007,S,R"
      //  1562, 59, "M2P008,S,R"
      //  1548, 57, "M2P009,S,R"
      //  1550, 59, "M2P010,S,R"
      //  1561, 56, "M2P011,S,R"
      //  1558, 60, "M2P012,S,R"
      //  1565, 57, "M2P013,S,R"
      //  1551, 57, "M2P014,S,R"
      //  1563, 60, "M2P015,S,R"
      //  1559, 54, "M2P016,S,R"
      //  1550, 54, "M2P017,S,R"
      //  1541, 52, "M2P018,S,R"
      //  1544, 52, "M2P019,S,R"
      //  1550, 70, "M2P020,S,R"
      //  1548, 86, "M2P021,S,R"
      //  1546, 84, "M2P022,S,R"
      //  1543, 85, "M2P023,S,R"
      //  1555, 83, "M2P024,S,R"
      //  1561, 85, "M2P025,S,R"
      //  1554, 86, "M2P026,S,R"
      //  1550, 85, "M2P027,S,R"
      //  1547, 83, "M2P028,S,R"
      //  1544, 83, "M2P029,S,R"
      //  1544, 84, "M2P030,S,R"
      //  1547, 83, "M2P031,S,R"
      //  1561, 84, "M2P032,S,R"
      //  1542, 84, "M2P033,S,R"
      //  1553, 87, "M2P034,S,R"
      //  1556, 86, "M2P035,S,R"
      //  1553, 85, "M2P036,S,R"
      //  1551, 84, "M2P037,S,R"
      //  1544, 86, "M2P038,S,R"
      //  1551, 85, "M2P039,S,R"
      //  1541, 85, "M2P040,S,R"
      //  1540, 86, "M2P041,S,R"
      //  1549, 84, "M2P042,S,R"
      //  1557, 83, "M2P043,S,R"
      //  1540, 68, "M2P044,S,R"
      //  1540, 54, "M2P045,S,R"
      //  1563, 53, "M2P046,S,R"
      //  1839, 64, "M2P047,S,R"
static const BYTE files_m2p [707] = {  6, 6, 0, 90, 77, 50, 80, 48, 48, 49, 44, 83, 44, 82, 0, 
     6, 29, 0, 75, 77, 50, 80, 48, 48, 50, 44, 83, 44, 82, 0, 
     6, 4, 0, 57, 77, 50, 80, 48, 48, 51, 44, 83, 44, 82, 0, 
     6, 10, 0, 60, 77, 50, 80, 48, 48, 52, 44, 83, 44, 82, 0, 
     6, 10, 0, 56, 77, 50, 80, 48, 48, 53, 44, 83, 44, 82, 0, 
     6, 17, 0, 61, 77, 50, 80, 48, 48, 54, 44, 83, 44, 82, 0, 
     6, 14, 0, 60, 77, 50, 80, 48, 48, 55, 44, 83, 44, 82, 0, 
     6, 26, 0, 59, 77, 50, 80, 48, 48, 56, 44, 83, 44, 82, 0, 
     6, 12, 0, 57, 77, 50, 80, 48, 48, 57, 44, 83, 44, 82, 0, 
     6, 14, 0, 59, 77, 50, 80, 48, 49, 48, 44, 83, 44, 82, 0, 
     6, 25, 0, 56, 77, 50, 80, 48, 49, 49, 44, 83, 44, 82, 0, 
     6, 22, 0, 60, 77, 50, 80, 48, 49, 50, 44, 83, 44, 82, 0, 
     6, 29, 0, 57, 77, 50, 80, 48, 49, 51, 44, 83, 44, 82, 0, 
     6, 15, 0, 57, 77, 50, 80, 48, 49, 52, 44, 83, 44, 82, 0, 
     6, 27, 0, 60, 77, 50, 80, 48, 49, 53, 44, 83, 44, 82, 0, 
     6, 23, 0, 54, 77, 50, 80, 48, 49, 54, 44, 83, 44, 82, 0, 
     6, 14, 0, 54, 77, 50, 80, 48, 49, 55, 44, 83, 44, 82, 0, 
     6, 5, 0, 52, 77, 50, 80, 48, 49, 56, 44, 83, 44, 82, 0, 
     6, 8, 0, 52, 77, 50, 80, 48, 49, 57, 44, 83, 44, 82, 0, 
     6, 14, 0, 70, 77, 50, 80, 48, 50, 48, 44, 83, 44, 82, 0, 
     6, 12, 0, 86, 77, 50, 80, 48, 50, 49, 44, 83, 44, 82, 0, 
     6, 10, 0, 84, 77, 50, 80, 48, 50, 50, 44, 83, 44, 82, 0, 
     6, 7, 0, 85, 77, 50, 80, 48, 50, 51, 44, 83, 44, 82, 0, 
     6, 19, 0, 83, 77, 50, 80, 48, 50, 52, 44, 83, 44, 82, 0, 
     6, 25, 0, 85, 77, 50, 80, 48, 50, 53, 44, 83, 44, 82, 0, 
     6, 18, 0, 86, 77, 50, 80, 48, 50, 54, 44, 83, 44, 82, 0, 
     6, 14, 0, 85, 77, 50, 80, 48, 50, 55, 44, 83, 44, 82, 0, 
     6, 11, 0, 83, 77, 50, 80, 48, 50, 56, 44, 83, 44, 82, 0, 
     6, 8, 0, 83, 77, 50, 80, 48, 50, 57, 44, 83, 44, 82, 0, 
     6, 8, 0, 84, 77, 50, 80, 48, 51, 48, 44, 83, 44, 82, 0, 
     6, 11, 0, 83, 77, 50, 80, 48, 51, 49, 44, 83, 44, 82, 0, 
     6, 25, 0, 84, 77, 50, 80, 48, 51, 50, 44, 83, 44, 82, 0, 
     6, 6, 0, 84, 77, 50, 80, 48, 51, 51, 44, 83, 44, 82, 0, 
     6, 17, 0, 87, 77, 50, 80, 48, 51, 52, 44, 83, 44, 82, 0, 
     6, 20, 0, 86, 77, 50, 80, 48, 51, 53, 44, 83, 44, 82, 0, 
     6, 17, 0, 85, 77, 50, 80, 48, 51, 54, 44, 83, 44, 82, 0, 
     6, 15, 0, 84, 77, 50, 80, 48, 51, 55, 44, 83, 44, 82, 0, 
     6, 8, 0, 86, 77, 50, 80, 48, 51, 56, 44, 83, 44, 82, 0, 
     6, 15, 0, 85, 77, 50, 80, 48, 51, 57, 44, 83, 44, 82, 0, 
     6, 5, 0, 85, 77, 50, 80, 48, 52, 48, 44, 83, 44, 82, 0, 
     6, 4, 0, 86, 77, 50, 80, 48, 52, 49, 44, 83, 44, 82, 0, 
     6, 13, 0, 84, 77, 50, 80, 48, 52, 50, 44, 83, 44, 82, 0, 
     6, 21, 0, 83, 77, 50, 80, 48, 52, 51, 44, 83, 44, 82, 0, 
     6, 4, 0, 68, 77, 50, 80, 48, 52, 52, 44, 83, 44, 82, 0, 
     6, 4, 0, 54, 77, 50, 80, 48, 52, 53, 44, 83, 44, 82, 0, 
     6, 27, 0, 53, 77, 50, 80, 48, 52, 54, 44, 83, 44, 82, 0, 
     7, 47, 0, 64, 77, 50, 80, 48, 52, 55, 44, 83, 44, 82, 0, 
   0,0};

      //  1568, 49, "M3P001,S,R"
      //  1549, 50, "M3P002,S,R"
      //  1547, 49, "M3P003,S,R"
      //  1558, 50, "M3P004,S,R"
      //  1561, 51, "M3P005,S,R"
      //  1543, 49, "M3P006,S,R"
      //  1540, 50, "M3P007,S,R"
      //  1541, 48, "M3P008,S,R"
      //  1556, 48, "M3P009,S,R"
      //  1555, 45, "M3P010,S,R"
      //  1551, 47, "M3P011,S,R"
      //  1569, 46, "M3P012,S,R"
      //  1566, 47, "M3P013,S,R"
      //  1545, 46, "M3P014,S,R"
      //  2212, 68, "M3P015,S,R"
static const BYTE files_m3p [227] = {  6, 32, 0, 49, 77, 51, 80, 48, 48, 49, 44, 83, 44, 82, 0, 
     6, 13, 0, 50, 77, 51, 80, 48, 48, 50, 44, 83, 44, 82, 0, 
     6, 11, 0, 49, 77, 51, 80, 48, 48, 51, 44, 83, 44, 82, 0, 
     6, 22, 0, 50, 77, 51, 80, 48, 48, 52, 44, 83, 44, 82, 0, 
     6, 25, 0, 51, 77, 51, 80, 48, 48, 53, 44, 83, 44, 82, 0, 
     6, 7, 0, 49, 77, 51, 80, 48, 48, 54, 44, 83, 44, 82, 0, 
     6, 4, 0, 50, 77, 51, 80, 48, 48, 55, 44, 83, 44, 82, 0, 
     6, 5, 0, 48, 77, 51, 80, 48, 48, 56, 44, 83, 44, 82, 0, 
     6, 20, 0, 48, 77, 51, 80, 48, 48, 57, 44, 83, 44, 82, 0, 
     6, 19, 0, 45, 77, 51, 80, 48, 49, 48, 44, 83, 44, 82, 0, 
     6, 15, 0, 47, 77, 51, 80, 48, 49, 49, 44, 83, 44, 82, 0, 
     6, 33, 0, 46, 77, 51, 80, 48, 49, 50, 44, 83, 44, 82, 0, 
     6, 30, 0, 47, 77, 51, 80, 48, 49, 51, 44, 83, 44, 82, 0, 
     6, 9, 0, 46, 77, 51, 80, 48, 49, 52, 44, 83, 44, 82, 0, 
     8, 164, 0, 68, 77, 51, 80, 48, 49, 53, 44, 83, 44, 82, 0, 
   0,0};

